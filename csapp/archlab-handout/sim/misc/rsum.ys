#init function
# 初始化
    .pos 0x0
    irmovq stack,%rsp
    call main
    ret

# Sample linked list
    .pos 0x200
    .align 8
    # 创建 结构体
node1:
    .quad 0x00a
    .quad node2
node2:
    .quad 0x0b0
    .quad node3
node3:
    .quad 0xc00
    .quad 0

# main function
main:
    irmovq node1,%rdi   # 传入参数
    call rsum_list      # 执行函数
    ret

# rsum_list function
rsum_list:
    andq %rdi,%rdi    # if(ls == 0) ret
    je exit
    mrmovq (%rdi),%rbx
    mrmovq 8(%rdi),%rdi   # 参数 rdi->next
    pushq %rbx            # 压入 rbx 临时变量
    call rsum_list
    popq %rbx              
    addq %rbx,%rax        # 相加
    ret
exit:
    irmovq $0,%rax        # 如果没有值 就返回 0
    ret

#alloc stack space
    .pos 0x1000
stack:
